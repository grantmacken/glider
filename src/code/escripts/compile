#!/usr/bin/env escript
%% -*- coding: utf-8 -*-
%%! -setcookie monster
-define(SELF_NODE, list_to_atom( "compile_" ++ integer_to_list(rand:uniform(16#FFFFFFFFF)) ++ "@127.0.0.1")).
% {xqError, "-record(xqError,{name,description,value,location,additional})."}
-record(xqError, {
    name,
    description = [],
    value = [],
    % {Module, Line, Column}
    location = undefined,
    additional = []
}).

formatError(Source, E) -> 
Msg = E#xqError.description,
Line = integer_to_list(element(2,E#xqError.location)),
%io:format("~p~n" , [ E#xqError.location]).
io:format("src/~s:~s:Error: ~s ~n" , [ Source, Line, Msg ]).

main([Source]) ->
   {ok, _} = net_kernel:start([?SELF_NODE, longnames]),
   Timeout = 10000,
 try rpc:call( 'xqerl@127.0.0.1',
                    xqerl,
                    compile,
                    [Source],
                    Timeout) of
    I when is_atom(I) -> io:format("src/~s:1:Info: compiled ok! ~s ~n" , [ Source, I]);
    E when is_record(E, xqError) -> formatError(Source, E) 
 catch 
    error:_ErrReason -> io:format("RPC ERROR: ~p ~n" , [ _ErrReason ]);
    exit:_ExitReason -> io:format("RPC EXIT: ~p ~n" , [  _ExitReason ])
  end. 

